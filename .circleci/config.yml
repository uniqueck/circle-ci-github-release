version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - run: |
          if [[ "$CIRCLE_TAG" != "" ]]; then
            VERSION="$(echo "$CIRCLE_TAG" | grep -Po '\d+\.\d+\.\d+')"
            ./mvnw versions:set -DnewVersion=${VERSION} versions:commit
          fi
      - run: ./mvnw verify
      - persist_to_workspace:
          root: target
          paths:
            - circle-ci-github-release.jar
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - run:
          name: publish documentation to gh-pages
          command: |
            if [[ "$CIRCLE_TAG" != "" ]]; then
              git config user.email "ci-build@gmail.com"
              git config user.name "ci-build"
              ./mvnw org.apache.maven.plugins:maven-scm-publish-plugin:publish-scm
            fi
  docs-build:
      docker:
        - image: circleci/openjdk:8-jdk
      steps:
        - checkout
        - run:
            name: "Generate documentation"
            command: ./mvnw -Pdocs-build clean generate-resources
        - persist_to_workspace:
              root: ./target
              paths: generated-docs
  docs-deploy:
      docker:
        - image: node:8.10.0
      steps:
        - attach_workspace:
            at: ./target
        - run:
            name: "Install and configure dependencies"
            command: |
              npm install -g --silent gh-pages@2.0.1
              git config user.email "ci-build@constantinidis.de"
              git config user.name "ci-build"
        - run:
            name: "Deploy docs to gh-pages branch"
            command: gh-pages --dist target/generated-docs/*.html
  publish-github-release:
      docker:
        - image: circleci/golang:1.8
      steps:
        - checkout
        - attach_workspace:
            at: ./target
        - run:
            name: "Publish Release on GitHub"
            command: |
              go get github.com/tcnksm/ghr
              ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./target/
        - run:
            name: "Set Permission"
            command: chmod +x ./scripts/telegram_notification.sh
            when: on_success
        - run:
            name: "Send Notification"
            command: ./scripts/telegram_notification.sh "success"
            shell: /bin/bash
            when: on_success
workflows:
  version: 2
  build-n-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - docs-build:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - docs-deploy:
          requires:
            - docs-build
          filters:
            tags:
              only: /.*/
      - publish-github-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

